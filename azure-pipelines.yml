trigger:
- main

variables:
  # Container registry
  ACR_NAME: privatecontainerregistry.azurecr.io
  IMAGE_NAME: flask-hello-world

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true

    - script: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      displayName: 'Install dependencies'
      
    - task: Docker@2
      inputs:
        containerRegistry: '$(ACR_NAME)'
        repository: '$(IMAGE_NAME)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(Build.BuildId)
          
- stage: Deploy
  dependsOn: Build
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'aks-env'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Kubernetes@1
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscription: 'Your Azure Subscription'
              azureResourceGroup: '$(RESOURCE_GROUP)'
              kubernetesCluster: '$(AKS_NAME)'
              namespace: 'default'
              command: apply
              useConfigurationFile: true
              configuration: 'manifests/deployment.yml'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Azure Container Registry'
              azureSubscriptionEndpoint: 'Your Azure Subscription'
              azureContainerRegistry: '$(ACR_NAME)'
